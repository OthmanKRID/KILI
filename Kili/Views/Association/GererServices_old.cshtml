@using Kili.Models.General
@model Kili.ViewModels.ServicesViewModel


@{
    Layout = "_Layout";
    ViewBag.Title = "GererServices";
}

    <h1>
       Gestion des services
    </h1>


        <Label>Listes des Services Proposés :</Label>
        <table border=1> 
        <tr>
        <th>Type de Service</th>
        <th>Durée de l'abonnement</th>
        <th>Prix</th>
        <th></th>
        </tr>

        @foreach(var service in Model.listesServicesProposes)
        {
        
            @Html.HiddenFor(a => a.abonnement)
            @Html.HiddenFor(a => a.ServiceAdhesion)
            @Html.HiddenFor(a => a.ServiceDon)


            @if ((Model.abonnement.serviceAdhesion.EstActif == false && @service.TypeService == TypeService.Adhesion ) || (Model.abonnement.serviceDon.EstActif == false && @service.TypeService == TypeService.Don) || (Model.abonnement.serviceBoutique.EstActif == false && @service.TypeService == TypeService.Boutique))

            {
            <tr>
                <th>@service.TypeService</th>
                <th>@service.duree_mois mois</th>
                <th>@service.prix €</th>
                <th>@Html.ActionLink("Ajouter au panier", "AjouterService", "Abonnement",  new { id = @service.Id })</th>
            </tr>         
            }
        }
        </table>   
         <button button type="button" class="button">@Html.ActionLink("Accéder au panier", "PanierServices", "Abonnement")</button>
         
         
    <br />


    <script type="text/javascript" src="~/Scripts/jquery-3.3.1.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate-vsdoc.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.js"></script>

